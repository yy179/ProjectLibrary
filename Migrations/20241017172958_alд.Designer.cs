// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectLibrary;

#nullable disable

namespace ProjectLibrary.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20241017172958_alд")]
    partial class alд
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrganizationEntityVolunteerEntity", b =>
                {
                    b.Property<Guid>("OrganizationsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VolunteersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrganizationsId", "VolunteersId");

                    b.HasIndex("VolunteersId");

                    b.ToTable("OrganizationEntityVolunteerEntity");
                });

            modelBuilder.Entity("ProjectLibrary.Models.ContactPersonEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MilitaryUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MilitaryUnitId")
                        .IsUnique()
                        .HasFilter("[MilitaryUnitId] IS NOT NULL");

                    b.ToTable("ContactPersons");
                });

            modelBuilder.Entity("ProjectLibrary.Models.MilitaryUnitEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MilitaryUnits");
                });

            modelBuilder.Entity("ProjectLibrary.Models.OrganizationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("ProjectLibrary.Models.RequestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AcceptedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MilitaryUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("VolunteerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MilitaryUnitId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ProjectLibrary.Models.VolunteerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("OrganizationEntityVolunteerEntity", b =>
                {
                    b.HasOne("ProjectLibrary.Models.OrganizationEntity", null)
                        .WithMany()
                        .HasForeignKey("OrganizationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectLibrary.Models.VolunteerEntity", null)
                        .WithMany()
                        .HasForeignKey("VolunteersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectLibrary.Models.ContactPersonEntity", b =>
                {
                    b.HasOne("ProjectLibrary.Models.MilitaryUnitEntity", "MilitaryUnit")
                        .WithOne("ContactPerson")
                        .HasForeignKey("ProjectLibrary.Models.ContactPersonEntity", "MilitaryUnitId");

                    b.Navigation("MilitaryUnit");
                });

            modelBuilder.Entity("ProjectLibrary.Models.RequestEntity", b =>
                {
                    b.HasOne("ProjectLibrary.Models.MilitaryUnitEntity", "MilitaryUnit")
                        .WithMany("Requests")
                        .HasForeignKey("MilitaryUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectLibrary.Models.OrganizationEntity", "Organization")
                        .WithMany("Requests")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("ProjectLibrary.Models.VolunteerEntity", "Volunteer")
                        .WithMany("Requests")
                        .HasForeignKey("VolunteerId");

                    b.Navigation("MilitaryUnit");

                    b.Navigation("Organization");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("ProjectLibrary.Models.MilitaryUnitEntity", b =>
                {
                    b.Navigation("ContactPerson");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("ProjectLibrary.Models.OrganizationEntity", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("ProjectLibrary.Models.VolunteerEntity", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
